; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/complex_tests/test-recursive0.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/complex_tests/test-recursive0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.list = type { %struct.list* }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.list* @construct(%struct.list* %head) #0 {
entry:
  %retval = alloca %struct.list*, align 8
  %head.addr = alloca %struct.list*, align 8
  %i = alloca i32, align 4
  %tmp = alloca %struct.list*, align 8
  store %struct.list* %head, %struct.list** %head.addr, align 8
  %0 = load i32, i32* %i, align 4
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call align 16 i8* @malloc(i64 8)
  %1 = bitcast i8* %call to %struct.list*
  store %struct.list* %1, %struct.list** %tmp, align 8
  %2 = load %struct.list*, %struct.list** %tmp, align 8
  %3 = load %struct.list*, %struct.list** %head.addr, align 8
  %prev = getelementptr inbounds %struct.list, %struct.list* %3, i32 0, i32 0
  store %struct.list* %2, %struct.list** %prev, align 8
  %4 = load %struct.list*, %struct.list** %tmp, align 8
  %call1 = call %struct.list* @construct(%struct.list* %4)
  store %struct.list* %call1, %struct.list** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %5 = load %struct.list*, %struct.list** %head.addr, align 8
  store %struct.list* %5, %struct.list** %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.list*, %struct.list** %retval, align 8
  ret %struct.list* %6
}

declare dso_local align 16 i8* @malloc(i64) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
entry:
  %head = alloca %struct.list*, align 8
  %call = call align 16 i8* @malloc(i64 8)
  %0 = bitcast i8* %call to %struct.list*
  store %struct.list* %0, %struct.list** %head, align 8
  %1 = load %struct.list*, %struct.list** %head, align 8
  %prev = getelementptr inbounds %struct.list, %struct.list* %1, i32 0, i32 0
  store %struct.list* null, %struct.list** %prev, align 8
  %2 = load %struct.list*, %struct.list** %head, align 8
  %call1 = call %struct.list* @construct(%struct.list* %2)
  store %struct.list* %call1, %struct.list** %head, align 8
  %3 = load %struct.list*, %struct.list** %head, align 8
  %prev2 = getelementptr inbounds %struct.list, %struct.list* %3, i32 0, i32 0
  %4 = load %struct.list*, %struct.list** %prev2, align 8
  store %struct.list* %4, %struct.list** %head, align 8
  ret i32 0
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{i32 7, !"frame-pointer", i32 2}
!3 = !{!"clang version 13.0.0"}
