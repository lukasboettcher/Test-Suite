; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/complex_tests/test.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/complex_tests/test.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.extendstruct = type { i32*, %struct.basestruct*, i32 }
%struct.basestruct = type { i32*, i32* }

@i = dso_local global i32 0, align 4
@saveptr = dso_local global [5 x i32*] zeroinitializer, align 16
@gvar = dso_local global [10 x %struct.extendstruct] zeroinitializer, align 16

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @save(%struct.basestruct** %var) #0 {
entry:
  %var.addr = alloca %struct.basestruct**, align 8
  %idx = alloca i32, align 4
  %temp = alloca i32*, align 8
  store %struct.basestruct** %var, %struct.basestruct*** %var.addr, align 8
  %0 = load i32, i32* @i, align 4
  store i32 %0, i32* %idx, align 4
  %1 = load %struct.basestruct**, %struct.basestruct*** %var.addr, align 8
  %2 = bitcast %struct.basestruct** %1 to i32*
  store i32* %2, i32** %temp, align 8
  %3 = load %struct.basestruct**, %struct.basestruct*** %var.addr, align 8
  %4 = bitcast %struct.basestruct** %3 to i32*
  %5 = load i32, i32* %idx, align 4
  %idxprom = zext i32 %5 to i64
  %arrayidx = getelementptr inbounds [5 x i32*], [5 x i32*]* @saveptr, i64 0, i64 %idxprom
  store i32* %4, i32** %arrayidx, align 8
  %6 = load %struct.basestruct**, %struct.basestruct*** %var.addr, align 8
  %7 = load %struct.basestruct*, %struct.basestruct** %6, align 8
  %8 = bitcast %struct.basestruct* %7 to i32*
  %9 = load i32, i32* %idx, align 4
  %add = add i32 %9, 1
  %idxprom1 = zext i32 %add to i64
  %arrayidx2 = getelementptr inbounds [5 x i32*], [5 x i32*]* @saveptr, i64 0, i64 %idxprom1
  store i32* %8, i32** %arrayidx2, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @f() #0 {
entry:
  %temp = alloca %struct.basestruct*, align 8
  %t1 = alloca %struct.extendstruct*, align 8
  %t2 = alloca %struct.basestruct*, align 8
  %call = call i8* @malloc(i32 16)
  %0 = bitcast i8* %call to %struct.basestruct*
  store %struct.basestruct* %0, %struct.basestruct** getelementptr inbounds ([10 x %struct.extendstruct], [10 x %struct.extendstruct]* @gvar, i64 0, i64 0, i32 1), align 8
  call void @save(%struct.basestruct** bitcast ([10 x %struct.extendstruct]* @gvar to %struct.basestruct**))
  %1 = load i32, i32* @i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [5 x i32*], [5 x i32*]* @saveptr, i64 0, i64 %idxprom
  %2 = load i32*, i32** %arrayidx, align 8
  %3 = bitcast i32* %2 to %struct.basestruct*
  store %struct.basestruct* %3, %struct.basestruct** %temp, align 8
  %4 = load %struct.basestruct*, %struct.basestruct** %temp, align 8
  %5 = bitcast %struct.basestruct* %4 to %struct.extendstruct*
  store %struct.extendstruct* %5, %struct.extendstruct** %t1, align 8
  %6 = load %struct.extendstruct*, %struct.extendstruct** %t1, align 8
  %a = getelementptr inbounds %struct.extendstruct, %struct.extendstruct* %6, i32 0, i32 1
  %7 = load %struct.basestruct*, %struct.basestruct** %a, align 8
  store %struct.basestruct* %7, %struct.basestruct** %t2, align 8
  %8 = load %struct.basestruct*, %struct.basestruct** %t2, align 8
  %a1 = getelementptr inbounds %struct.basestruct, %struct.basestruct* %8, i32 0, i32 1
  %9 = load i32*, i32** %a1, align 8
  store i32 0, i32* %9, align 4
  ret void
}

declare dso_local i8* @malloc(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{i32 7, !"frame-pointer", i32 2}
!3 = !{!"clang version 13.0.0"}
