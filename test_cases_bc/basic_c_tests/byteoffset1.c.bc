; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/basic_c_tests/byteoffset1.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/basic_c_tests/byteoffset1.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.StructA = type { i32, i32 ()* }

@.str = private unnamed_addr constant [6 x i8] c"%c%c\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MAYALIAS(i8* %p, i8* %q) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %q.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  store i8* %q, i8** %q.addr, align 8
  %0 = load i8*, i8** %p.addr, align 8
  %1 = load i8*, i8** %q.addr, align 8
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* %0, i8* %1)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @FuncA() #0 {
entry:
  ret i32 1
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @CallF(%struct.StructA* %structA) #0 {
entry:
  %structA.addr = alloca %struct.StructA*, align 8
  %ret = alloca i32, align 4
  store %struct.StructA* %structA, %struct.StructA** %structA.addr, align 8
  %0 = load %struct.StructA*, %struct.StructA** %structA.addr, align 8
  %f = getelementptr inbounds %struct.StructA, %struct.StructA* %0, i32 0, i32 1
  %1 = load i32 ()*, i32 ()** %f, align 8
  %call = call i32 %1()
  store i32 %call, i32* %ret, align 4
  %2 = load %struct.StructA*, %struct.StructA** %structA.addr, align 8
  %f1 = getelementptr inbounds %struct.StructA, %struct.StructA* %2, i32 0, i32 1
  %3 = load i32 ()*, i32 ()** %f1, align 8
  %4 = bitcast i32 ()* %3 to i8*
  call void @MAYALIAS(i8* %4, i8* bitcast (i32 ()* @FuncA to i8*))
  %5 = load i32, i32* %ret, align 4
  ret i32 %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %structA = alloca %struct.StructA*, align 8
  %ret = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  %call = call align 16 i8* @malloc(i64 16)
  %0 = bitcast i8* %call to %struct.StructA*
  store %struct.StructA* %0, %struct.StructA** %structA, align 8
  %1 = load %struct.StructA*, %struct.StructA** %structA, align 8
  %f = getelementptr inbounds %struct.StructA, %struct.StructA* %1, i32 0, i32 1
  store i32 ()* @FuncA, i32 ()** %f, align 8
  %2 = load %struct.StructA*, %struct.StructA** %structA, align 8
  %call1 = call i32 @CallF(%struct.StructA* %2)
  store i32 %call1, i32* %ret, align 4
  %3 = load i32, i32* %ret, align 4
  ret i32 %3
}

declare dso_local align 16 i8* @malloc(i64) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{i32 7, !"frame-pointer", i32 2}
!3 = !{!"clang version 13.0.0"}
