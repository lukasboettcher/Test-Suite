; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/basic_cpp_tests/func-ptr-in-class.cpp.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/basic_cpp_tests/func-ptr-in-class.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.A = type { i32 (...)**, void (i32*)*, void (i32*)* }

$_ZN1AC2Ev = comdat any

$_ZN1A1fEPi = comdat any

$_ZN1A1gEPi = comdat any

$_ZTV1A = comdat any

$_ZTS1A = comdat any

$_ZTI1A = comdat any

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"Press ENTER to continue\0A\00", align 1
@global_obj_f = dso_local global i32 0, align 4
@global_ptr_f = dso_local global i32* @global_obj_f, align 8
@global_obj_g = dso_local global i32 0, align 4
@global_ptr_g = dso_local global i32* @global_obj_g, align 8
@global_obj_f_v = dso_local global i32 0, align 4
@global_ptr_f_v = dso_local global i32* @global_obj_f_v, align 8
@global_obj_g_v = dso_local global i32 0, align 4
@global_ptr_g_v = dso_local global i32* @global_obj_g_v, align 8
@_ZTV1A = linkonce_odr dso_local unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI1A to i8*), i8* bitcast (void (%class.A*, i32*)* @_ZN1A1fEPi to i8*), i8* bitcast (void (%class.A*, i32*)* @_ZN1A1gEPi to i8*)] }, comdat, align 8
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTS1A = linkonce_odr dso_local constant [3 x i8] c"1A\00", comdat, align 1
@_ZTI1A = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZTS1A, i32 0, i32 0) }, comdat, align 8

; Function Attrs: noinline optnone uwtable mustprogress
define dso_local void @_Z9MUSTALIASPvS_(i8* %p, i8* %q) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %q.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  store i8* %q, i8** %q.addr, align 8
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noinline optnone uwtable mustprogress
define dso_local void @_Z12PARTIALALIASPvS_(i8* %p, i8* %q) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %q.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  store i8* %q, i8** %q.addr, align 8
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define dso_local void @_Z8MAYALIASPvS_(i8* %p, i8* %q) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %q.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  store i8* %q, i8** %q.addr, align 8
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define dso_local void @_Z7NOALIASPvS_(i8* %p, i8* %q) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %q.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  store i8* %q, i8** %q.addr, align 8
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define dso_local void @_Z21EXPECTEDFAIL_MAYALIASPvS_(i8* %p, i8* %q) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %q.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  store i8* %q, i8** %q.addr, align 8
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define dso_local void @_Z20EXPECTEDFAIL_NOALIASPvS_(i8* %p, i8* %q) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %q.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  store i8* %q, i8** %q.addr, align 8
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local i8* @_Z10SAFEMALLOCi(i32 %n) #2 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32, i32* %n.addr, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @malloc(i64 %conv) #7
  ret i8* %call
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #3

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local i8* @_Z9PLKMALLOCi(i32 %n) #2 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32, i32* %n.addr, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @malloc(i64 %conv) #7
  ret i8* %call
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local i8* @_Z9NFRMALLOCi(i32 %n) #2 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32, i32* %n.addr, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @malloc(i64 %conv) #7
  ret i8* %call
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local i8* @_Z9CLKMALLOCi(i32 %n) #2 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32, i32* %n.addr, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @malloc(i64 %conv) #7
  ret i8* %call
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local i8* @_Z9NFRLEAKFPi(i32 %n) #2 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32, i32* %n.addr, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @malloc(i64 %conv) #7
  ret i8* %call
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local i8* @_Z9PLKLEAKFPi(i32 %n) #2 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32, i32* %n.addr, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @malloc(i64 %conv) #7
  ret i8* %call
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local i8* @_Z6LEAKFNi(i32 %n) #2 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32, i32* %n.addr, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @malloc(i64 %conv) #7
  ret i8* %call
}

; Function Attrs: noinline optnone uwtable mustprogress
define dso_local void @_Z9RC_ACCESSii(i32 %id, i32 %flags) #0 {
entry:
  %id.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store i32 %id, i32* %id.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local void @_Z10CXT_THREADiPc(i32 %thdid, i8* %cxt) #2 {
entry:
  %thdid.addr = alloca i32, align 4
  %cxt.addr = alloca i8*, align 8
  store i32 %thdid, i32* %thdid.addr, align 4
  store i8* %cxt, i8** %cxt.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local void @_Z10TCT_ACCESSiPc(i32 %thdid, i8* %cxt) #2 {
entry:
  %thdid.addr = alloca i32, align 4
  %cxt.addr = alloca i8*, align 8
  store i32 %thdid, i32* %thdid.addr, align 4
  store i8* %cxt, i8** %cxt.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local void @_Z15INTERLEV_ACCESSiPcS_(i32 %thdid, i8* %cxt, i8* %lev) #2 {
entry:
  %thdid.addr = alloca i32, align 4
  %cxt.addr = alloca i8*, align 8
  %lev.addr = alloca i8*, align 8
  store i32 %thdid, i32* %thdid.addr, align 4
  store i8* %cxt, i8** %cxt.addr, align 8
  store i8* %lev, i8** %lev.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local void @_Z4LOCKPc(i8* %lockname) #2 {
entry:
  %lockname.addr = alloca i8*, align 8
  store i8* %lockname, i8** %lockname.addr, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define dso_local void @_Z5PAUSEPc(i8* %str) #0 {
entry:
  %str.addr = alloca i8*, align 8
  store i8* %str, i8** %str.addr, align 8
  %0 = load i8*, i8** %str.addr, align 8
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8* %0)
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0))
  %call2 = call i32 @getchar()
  ret void
}

declare dso_local i32 @getchar() #1

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local void @_Z5derefv() #2 {
entry:
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define dso_local void @_Z1fPi(i32* %i) #0 {
entry:
  %i.addr = alloca i32*, align 8
  store i32* %i, i32** %i.addr, align 8
  %0 = load i32*, i32** @global_ptr_f, align 8
  %1 = bitcast i32* %0 to i8*
  %2 = load i32*, i32** %i.addr, align 8
  %3 = bitcast i32* %2 to i8*
  call void @_Z9MUSTALIASPvS_(i8* %1, i8* %3)
  %4 = load i32*, i32** @global_ptr_g, align 8
  %5 = bitcast i32* %4 to i8*
  %6 = load i32*, i32** %i.addr, align 8
  %7 = bitcast i32* %6 to i8*
  call void @_Z7NOALIASPvS_(i8* %5, i8* %7)
  %8 = load i32*, i32** @global_ptr_f_v, align 8
  %9 = bitcast i32* %8 to i8*
  %10 = load i32*, i32** %i.addr, align 8
  %11 = bitcast i32* %10 to i8*
  call void @_Z7NOALIASPvS_(i8* %9, i8* %11)
  %12 = load i32*, i32** @global_ptr_g_v, align 8
  %13 = bitcast i32* %12 to i8*
  %14 = load i32*, i32** %i.addr, align 8
  %15 = bitcast i32* %14 to i8*
  call void @_Z7NOALIASPvS_(i8* %13, i8* %15)
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define dso_local void @_Z1gPi(i32* %i) #0 {
entry:
  %i.addr = alloca i32*, align 8
  store i32* %i, i32** %i.addr, align 8
  %0 = load i32*, i32** @global_ptr_f, align 8
  %1 = bitcast i32* %0 to i8*
  %2 = load i32*, i32** %i.addr, align 8
  %3 = bitcast i32* %2 to i8*
  call void @_Z7NOALIASPvS_(i8* %1, i8* %3)
  %4 = load i32*, i32** @global_ptr_g, align 8
  %5 = bitcast i32* %4 to i8*
  %6 = load i32*, i32** %i.addr, align 8
  %7 = bitcast i32* %6 to i8*
  call void @_Z9MUSTALIASPvS_(i8* %5, i8* %7)
  %8 = load i32*, i32** @global_ptr_f_v, align 8
  %9 = bitcast i32* %8 to i8*
  %10 = load i32*, i32** %i.addr, align 8
  %11 = bitcast i32* %10 to i8*
  call void @_Z7NOALIASPvS_(i8* %9, i8* %11)
  %12 = load i32*, i32** @global_ptr_g_v, align 8
  %13 = bitcast i32* %12 to i8*
  %14 = load i32*, i32** %i.addr, align 8
  %15 = bitcast i32* %14 to i8*
  call void @_Z7NOALIASPvS_(i8* %13, i8* %15)
  ret void
}

; Function Attrs: noinline norecurse optnone uwtable mustprogress
define dso_local i32 @main() #4 {
entry:
  %retval = alloca i32, align 4
  %ptr_f = alloca i32*, align 8
  %ptr_g = alloca i32*, align 8
  %ptr_f_v = alloca i32*, align 8
  %ptr_g_v = alloca i32*, align 8
  %a = alloca %class.A*, align 8
  store i32 0, i32* %retval, align 4
  store i32* @global_obj_f, i32** %ptr_f, align 8
  store i32* @global_obj_g, i32** %ptr_g, align 8
  store i32* @global_obj_f_v, i32** %ptr_f_v, align 8
  store i32* @global_obj_g_v, i32** %ptr_g_v, align 8
  %call = call noalias nonnull i8* @_Znwm(i64 24) #8
  %0 = bitcast i8* %call to %class.A*
  call void @_ZN1AC2Ev(%class.A* nonnull dereferenceable(24) %0) #7
  store %class.A* %0, %class.A** %a, align 8
  %1 = load %class.A*, %class.A** %a, align 8
  %pf = getelementptr inbounds %class.A, %class.A* %1, i32 0, i32 1
  store void (i32*)* @_Z1fPi, void (i32*)** %pf, align 8
  %2 = load %class.A*, %class.A** %a, align 8
  %pg = getelementptr inbounds %class.A, %class.A* %2, i32 0, i32 2
  store void (i32*)* @_Z1gPi, void (i32*)** %pg, align 8
  %3 = load %class.A*, %class.A** %a, align 8
  %pf1 = getelementptr inbounds %class.A, %class.A* %3, i32 0, i32 1
  %4 = load void (i32*)*, void (i32*)** %pf1, align 8
  %5 = load i32*, i32** %ptr_f, align 8
  call void %4(i32* %5)
  %6 = load %class.A*, %class.A** %a, align 8
  %pg2 = getelementptr inbounds %class.A, %class.A* %6, i32 0, i32 2
  %7 = load void (i32*)*, void (i32*)** %pg2, align 8
  %8 = load i32*, i32** %ptr_g, align 8
  call void %7(i32* %8)
  %9 = load %class.A*, %class.A** %a, align 8
  %10 = load i32*, i32** %ptr_f_v, align 8
  %11 = bitcast %class.A* %9 to void (%class.A*, i32*)***
  %vtable = load void (%class.A*, i32*)**, void (%class.A*, i32*)*** %11, align 8
  %vfn = getelementptr inbounds void (%class.A*, i32*)*, void (%class.A*, i32*)** %vtable, i64 0
  %12 = load void (%class.A*, i32*)*, void (%class.A*, i32*)** %vfn, align 8
  call void %12(%class.A* nonnull dereferenceable(24) %9, i32* %10)
  %13 = load %class.A*, %class.A** %a, align 8
  %14 = load i32*, i32** %ptr_g_v, align 8
  %15 = bitcast %class.A* %13 to void (%class.A*, i32*)***
  %vtable3 = load void (%class.A*, i32*)**, void (%class.A*, i32*)*** %15, align 8
  %vfn4 = getelementptr inbounds void (%class.A*, i32*)*, void (%class.A*, i32*)** %vtable3, i64 1
  %16 = load void (%class.A*, i32*)*, void (%class.A*, i32*)** %vfn4, align 8
  call void %16(%class.A* nonnull dereferenceable(24) %13, i32* %14)
  ret i32 0
}

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) #5

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN1AC2Ev(%class.A* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %class.A*, align 8
  store %class.A* %this, %class.A** %this.addr, align 8
  %this1 = load %class.A*, %class.A** %this.addr, align 8
  %0 = bitcast %class.A* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV1A, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define linkonce_odr dso_local void @_ZN1A1fEPi(%class.A* nonnull dereferenceable(24) %this, i32* %i) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca %class.A*, align 8
  %i.addr = alloca i32*, align 8
  store %class.A* %this, %class.A** %this.addr, align 8
  store i32* %i, i32** %i.addr, align 8
  %this1 = load %class.A*, %class.A** %this.addr, align 8
  %0 = load i32*, i32** @global_ptr_f, align 8
  %1 = bitcast i32* %0 to i8*
  %2 = load i32*, i32** %i.addr, align 8
  %3 = bitcast i32* %2 to i8*
  call void @_Z7NOALIASPvS_(i8* %1, i8* %3)
  %4 = load i32*, i32** @global_ptr_g, align 8
  %5 = bitcast i32* %4 to i8*
  %6 = load i32*, i32** %i.addr, align 8
  %7 = bitcast i32* %6 to i8*
  call void @_Z7NOALIASPvS_(i8* %5, i8* %7)
  %8 = load i32*, i32** @global_ptr_f_v, align 8
  %9 = bitcast i32* %8 to i8*
  %10 = load i32*, i32** %i.addr, align 8
  %11 = bitcast i32* %10 to i8*
  call void @_Z9MUSTALIASPvS_(i8* %9, i8* %11)
  %12 = load i32*, i32** @global_ptr_g_v, align 8
  %13 = bitcast i32* %12 to i8*
  %14 = load i32*, i32** %i.addr, align 8
  %15 = bitcast i32* %14 to i8*
  call void @_Z7NOALIASPvS_(i8* %13, i8* %15)
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define linkonce_odr dso_local void @_ZN1A1gEPi(%class.A* nonnull dereferenceable(24) %this, i32* %i) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca %class.A*, align 8
  %i.addr = alloca i32*, align 8
  store %class.A* %this, %class.A** %this.addr, align 8
  store i32* %i, i32** %i.addr, align 8
  %this1 = load %class.A*, %class.A** %this.addr, align 8
  %0 = load i32*, i32** @global_ptr_f, align 8
  %1 = bitcast i32* %0 to i8*
  %2 = load i32*, i32** %i.addr, align 8
  %3 = bitcast i32* %2 to i8*
  call void @_Z7NOALIASPvS_(i8* %1, i8* %3)
  %4 = load i32*, i32** @global_ptr_g, align 8
  %5 = bitcast i32* %4 to i8*
  %6 = load i32*, i32** %i.addr, align 8
  %7 = bitcast i32* %6 to i8*
  call void @_Z7NOALIASPvS_(i8* %5, i8* %7)
  %8 = load i32*, i32** @global_ptr_f_v, align 8
  %9 = bitcast i32* %8 to i8*
  %10 = load i32*, i32** %i.addr, align 8
  %11 = bitcast i32* %10 to i8*
  call void @_Z7NOALIASPvS_(i8* %9, i8* %11)
  %12 = load i32*, i32** @global_ptr_g_v, align 8
  %13 = bitcast i32* %12 to i8*
  %14 = load i32*, i32** %i.addr, align 8
  %15 = bitcast i32* %14 to i8*
  call void @_Z9MUSTALIASPvS_(i8* %13, i8* %15)
  ret void
}

attributes #0 = { noinline optnone uwtable mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline nounwind optnone uwtable mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline norecurse optnone uwtable mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin allocsize(0) "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind optnone uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin allocsize(0) }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 12.0.0"}
