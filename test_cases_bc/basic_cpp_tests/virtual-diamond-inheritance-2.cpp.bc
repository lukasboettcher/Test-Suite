; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/basic_cpp_tests/virtual-diamond-inheritance-2.cpp.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/basic_cpp_tests/virtual-diamond-inheritance-2.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.A = type { i32 (...)** }
%class.B = type { %class.A }
%class.C = type { %class.A }
%class.D = type { %class.B, %class.C }

$_ZN1DC1Ev = comdat any

$_ZN1AC2Ev = comdat any

$_ZN1BC2Ev = comdat any

$_ZN1CC2Ev = comdat any

$_ZN1A2f1EPi = comdat any

$_ZN1A2f2EPi = comdat any

$_ZN1B2g1EPi = comdat any

$_ZN1B2g2EPi = comdat any

$_ZN1C2h1EPi = comdat any

$_ZN1C2h2EPi = comdat any

$_ZN1D2l1EPi = comdat any

$_ZN1D2l2EPi = comdat any

$_ZTV1D = comdat any

$_ZTT1D = comdat any

$_ZTC1D0_1B = comdat any

$_ZTS1B = comdat any

$_ZTS1A = comdat any

$_ZTI1A = comdat any

$_ZTI1B = comdat any

$_ZTC1D8_1C = comdat any

$_ZTS1C = comdat any

$_ZTI1C = comdat any

$_ZTS1D = comdat any

$_ZTI1D = comdat any

$_ZTV1A = comdat any

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"Press ENTER to continue\0A\00", align 1
@global_obj_f1 = dso_local global i32 0, align 4
@global_ptr_f1 = dso_local global i32* @global_obj_f1, align 8
@global_obj_f2 = dso_local global i32 0, align 4
@global_ptr_f2 = dso_local global i32* @global_obj_f2, align 8
@global_obj_g1 = dso_local global i32 0, align 4
@global_ptr_g1 = dso_local global i32* @global_obj_g1, align 8
@global_obj_g2 = dso_local global i32 0, align 4
@global_ptr_g2 = dso_local global i32* @global_obj_g2, align 8
@global_obj_h1 = dso_local global i32 0, align 4
@global_ptr_h1 = dso_local global i32* @global_obj_h1, align 8
@global_obj_h2 = dso_local global i32 0, align 4
@global_ptr_h2 = dso_local global i32* @global_obj_h2, align 8
@global_obj_l1 = dso_local global i32 0, align 4
@global_ptr_l1 = dso_local global i32* @global_obj_l1, align 8
@global_obj_l2 = dso_local global i32 0, align 4
@global_ptr_l2 = dso_local global i32* @global_obj_l2, align 8
@_ZTV1D = linkonce_odr dso_local unnamed_addr constant { [11 x i8*], [9 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* null, i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTI1D to i8*), i8* bitcast (void (%class.A*, i32*)* @_ZN1A2f1EPi to i8*), i8* bitcast (void (%class.A*, i32*)* @_ZN1A2f2EPi to i8*), i8* bitcast (void (%class.B*, i32*)* @_ZN1B2g1EPi to i8*), i8* bitcast (void (%class.B*, i32*)* @_ZN1B2g2EPi to i8*), i8* bitcast (void (%class.D*, i32*)* @_ZN1D2l1EPi to i8*), i8* bitcast (void (%class.D*, i32*)* @_ZN1D2l2EPi to i8*)], [9 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* inttoptr (i64 -8 to i8*), i8* inttoptr (i64 -8 to i8*), i8* inttoptr (i64 -8 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTI1D to i8*), i8* null, i8* null, i8* bitcast (void (%class.C*, i32*)* @_ZN1C2h1EPi to i8*), i8* bitcast (void (%class.C*, i32*)* @_ZN1C2h2EPi to i8*)] }, comdat, align 8
@_ZTT1D = linkonce_odr dso_local unnamed_addr constant [7 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [11 x i8*], [9 x i8*] }, { [11 x i8*], [9 x i8*] }* @_ZTV1D, i32 0, inrange i32 0, i32 5) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTC1D0_1B, i32 0, inrange i32 0, i32 5) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTC1D0_1B, i32 0, inrange i32 0, i32 5) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [9 x i8*], [6 x i8*] }, { [9 x i8*], [6 x i8*] }* @_ZTC1D8_1C, i32 0, inrange i32 0, i32 5) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [9 x i8*], [6 x i8*] }, { [9 x i8*], [6 x i8*] }* @_ZTC1D8_1C, i32 0, inrange i32 1, i32 4) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [11 x i8*], [9 x i8*] }, { [11 x i8*], [9 x i8*] }* @_ZTV1D, i32 0, inrange i32 0, i32 5) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [11 x i8*], [9 x i8*] }, { [11 x i8*], [9 x i8*] }* @_ZTV1D, i32 0, inrange i32 1, i32 5) to i8*)], comdat, align 8
@_ZTC1D0_1B = linkonce_odr dso_local unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* null, i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64 }* @_ZTI1B to i8*), i8* bitcast (void (%class.A*, i32*)* @_ZN1A2f1EPi to i8*), i8* bitcast (void (%class.A*, i32*)* @_ZN1A2f2EPi to i8*), i8* bitcast (void (%class.B*, i32*)* @_ZN1B2g1EPi to i8*), i8* bitcast (void (%class.B*, i32*)* @_ZN1B2g2EPi to i8*)] }, comdat, align 8
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external dso_local global i8*
@_ZTS1B = linkonce_odr dso_local constant [3 x i8] c"1B\00", comdat, align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTS1A = linkonce_odr dso_local constant [3 x i8] c"1A\00", comdat, align 1
@_ZTI1A = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZTS1A, i32 0, i32 0) }, comdat, align 8
@_ZTI1B = linkonce_odr dso_local constant { i8*, i8*, i32, i32, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZTS1B, i32 0, i32 0), i32 0, i32 1, i8* bitcast ({ i8*, i8* }* @_ZTI1A to i8*), i64 -10237 }, comdat, align 8
@_ZTC1D8_1C = linkonce_odr dso_local unnamed_addr constant { [9 x i8*], [6 x i8*] } { [9 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* inttoptr (i64 -8 to i8*), i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64 }* @_ZTI1C to i8*), i8* null, i8* null, i8* bitcast (void (%class.C*, i32*)* @_ZN1C2h1EPi to i8*), i8* bitcast (void (%class.C*, i32*)* @_ZN1C2h2EPi to i8*)], [6 x i8*] [i8* null, i8* null, i8* inttoptr (i64 8 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64 }* @_ZTI1C to i8*), i8* bitcast (void (%class.A*, i32*)* @_ZN1A2f1EPi to i8*), i8* bitcast (void (%class.A*, i32*)* @_ZN1A2f2EPi to i8*)] }, comdat, align 8
@_ZTS1C = linkonce_odr dso_local constant [3 x i8] c"1C\00", comdat, align 1
@_ZTI1C = linkonce_odr dso_local constant { i8*, i8*, i32, i32, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZTS1C, i32 0, i32 0), i32 0, i32 1, i8* bitcast ({ i8*, i8* }* @_ZTI1A to i8*), i64 -10237 }, comdat, align 8
@_ZTS1D = linkonce_odr dso_local constant [3 x i8] c"1D\00", comdat, align 1
@_ZTI1D = linkonce_odr dso_local constant { i8*, i8*, i32, i32, i8*, i64, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZTS1D, i32 0, i32 0), i32 2, i32 2, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64 }* @_ZTI1B to i8*), i64 2, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64 }* @_ZTI1C to i8*), i64 2050 }, comdat, align 8
@_ZTV1A = linkonce_odr dso_local unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI1A to i8*), i8* bitcast (void (%class.A*, i32*)* @_ZN1A2f1EPi to i8*), i8* bitcast (void (%class.A*, i32*)* @_ZN1A2f2EPi to i8*)] }, comdat, align 8

; Function Attrs: noinline optnone uwtable mustprogress
define dso_local void @_Z9MUSTALIASPvS_(i8* %p, i8* %q) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %q.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  store i8* %q, i8** %q.addr, align 8
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noinline optnone uwtable mustprogress
define dso_local void @_Z12PARTIALALIASPvS_(i8* %p, i8* %q) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %q.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  store i8* %q, i8** %q.addr, align 8
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define dso_local void @_Z8MAYALIASPvS_(i8* %p, i8* %q) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %q.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  store i8* %q, i8** %q.addr, align 8
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define dso_local void @_Z7NOALIASPvS_(i8* %p, i8* %q) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %q.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  store i8* %q, i8** %q.addr, align 8
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define dso_local void @_Z21EXPECTEDFAIL_MAYALIASPvS_(i8* %p, i8* %q) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %q.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  store i8* %q, i8** %q.addr, align 8
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define dso_local void @_Z20EXPECTEDFAIL_NOALIASPvS_(i8* %p, i8* %q) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %q.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  store i8* %q, i8** %q.addr, align 8
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local i8* @_Z10SAFEMALLOCi(i32 %n) #2 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32, i32* %n.addr, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @malloc(i64 %conv) #6
  ret i8* %call
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #3

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local i8* @_Z9PLKMALLOCi(i32 %n) #2 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32, i32* %n.addr, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @malloc(i64 %conv) #6
  ret i8* %call
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local i8* @_Z9NFRMALLOCi(i32 %n) #2 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32, i32* %n.addr, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @malloc(i64 %conv) #6
  ret i8* %call
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local i8* @_Z9CLKMALLOCi(i32 %n) #2 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32, i32* %n.addr, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @malloc(i64 %conv) #6
  ret i8* %call
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local i8* @_Z9NFRLEAKFPi(i32 %n) #2 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32, i32* %n.addr, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @malloc(i64 %conv) #6
  ret i8* %call
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local i8* @_Z9PLKLEAKFPi(i32 %n) #2 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32, i32* %n.addr, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @malloc(i64 %conv) #6
  ret i8* %call
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local i8* @_Z6LEAKFNi(i32 %n) #2 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32, i32* %n.addr, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @malloc(i64 %conv) #6
  ret i8* %call
}

; Function Attrs: noinline optnone uwtable mustprogress
define dso_local void @_Z9RC_ACCESSii(i32 %id, i32 %flags) #0 {
entry:
  %id.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store i32 %id, i32* %id.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local void @_Z10CXT_THREADiPc(i32 %thdid, i8* %cxt) #2 {
entry:
  %thdid.addr = alloca i32, align 4
  %cxt.addr = alloca i8*, align 8
  store i32 %thdid, i32* %thdid.addr, align 4
  store i8* %cxt, i8** %cxt.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local void @_Z10TCT_ACCESSiPc(i32 %thdid, i8* %cxt) #2 {
entry:
  %thdid.addr = alloca i32, align 4
  %cxt.addr = alloca i8*, align 8
  store i32 %thdid, i32* %thdid.addr, align 4
  store i8* %cxt, i8** %cxt.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local void @_Z15INTERLEV_ACCESSiPcS_(i32 %thdid, i8* %cxt, i8* %lev) #2 {
entry:
  %thdid.addr = alloca i32, align 4
  %cxt.addr = alloca i8*, align 8
  %lev.addr = alloca i8*, align 8
  store i32 %thdid, i32* %thdid.addr, align 4
  store i8* %cxt, i8** %cxt.addr, align 8
  store i8* %lev, i8** %lev.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local void @_Z4LOCKPc(i8* %lockname) #2 {
entry:
  %lockname.addr = alloca i8*, align 8
  store i8* %lockname, i8** %lockname.addr, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define dso_local void @_Z5PAUSEPc(i8* %str) #0 {
entry:
  %str.addr = alloca i8*, align 8
  store i8* %str, i8** %str.addr, align 8
  %0 = load i8*, i8** %str.addr, align 8
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8* %0)
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0))
  %call2 = call i32 @getchar()
  ret void
}

declare dso_local i32 @getchar() #1

; Function Attrs: noinline nounwind optnone uwtable mustprogress
define dso_local void @_Z5derefv() #2 {
entry:
  ret void
}

; Function Attrs: noinline norecurse optnone uwtable mustprogress
define dso_local i32 @main(i32 %argc, i8** %argv) #4 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %ptr_f1 = alloca i32*, align 8
  %ptr_f2 = alloca i32*, align 8
  %ptr_g1 = alloca i32*, align 8
  %ptr_g2 = alloca i32*, align 8
  %ptr_h1 = alloca i32*, align 8
  %ptr_h2 = alloca i32*, align 8
  %ptr_l1 = alloca i32*, align 8
  %ptr_l2 = alloca i32*, align 8
  %pa = alloca %class.A*, align 8
  %pb = alloca %class.B*, align 8
  %pc = alloca %class.C*, align 8
  %pd = alloca %class.D*, align 8
  %d = alloca %class.D, align 8
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  store i32* @global_obj_f1, i32** %ptr_f1, align 8
  store i32* @global_obj_f2, i32** %ptr_f2, align 8
  store i32* @global_obj_g1, i32** %ptr_g1, align 8
  store i32* @global_obj_g2, i32** %ptr_g2, align 8
  store i32* @global_obj_h1, i32** %ptr_h1, align 8
  store i32* @global_obj_h2, i32** %ptr_h2, align 8
  store i32* @global_obj_l1, i32** %ptr_l1, align 8
  store i32* @global_obj_l2, i32** %ptr_l2, align 8
  call void @_ZN1DC1Ev(%class.D* nonnull dereferenceable(16) %d) #6
  %0 = icmp eq %class.D* %d, null
  br i1 %0, label %cast.end, label %cast.notnull

cast.notnull:                                     ; preds = %entry
  %1 = bitcast %class.D* %d to i8**
  %vtable = load i8*, i8** %1, align 8
  %vbase.offset.ptr = getelementptr i8, i8* %vtable, i64 -40
  %2 = bitcast i8* %vbase.offset.ptr to i64*
  %vbase.offset = load i64, i64* %2, align 8
  %3 = bitcast %class.D* %d to i8*
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %vbase.offset
  %4 = bitcast i8* %add.ptr to %class.A*
  br label %cast.end

cast.end:                                         ; preds = %cast.notnull, %entry
  %cast.result = phi %class.A* [ %4, %cast.notnull ], [ null, %entry ]
  store %class.A* %cast.result, %class.A** %pa, align 8
  %5 = load %class.A*, %class.A** %pa, align 8
  %6 = load i32*, i32** %ptr_f1, align 8
  %7 = bitcast %class.A* %5 to void (%class.A*, i32*)***
  %vtable1 = load void (%class.A*, i32*)**, void (%class.A*, i32*)*** %7, align 8
  %vfn = getelementptr inbounds void (%class.A*, i32*)*, void (%class.A*, i32*)** %vtable1, i64 0
  %8 = load void (%class.A*, i32*)*, void (%class.A*, i32*)** %vfn, align 8
  call void %8(%class.A* nonnull dereferenceable(8) %5, i32* %6)
  %9 = load %class.A*, %class.A** %pa, align 8
  %10 = load i32*, i32** %ptr_f2, align 8
  %11 = bitcast %class.A* %9 to void (%class.A*, i32*)***
  %vtable2 = load void (%class.A*, i32*)**, void (%class.A*, i32*)*** %11, align 8
  %vfn3 = getelementptr inbounds void (%class.A*, i32*)*, void (%class.A*, i32*)** %vtable2, i64 1
  %12 = load void (%class.A*, i32*)*, void (%class.A*, i32*)** %vfn3, align 8
  call void %12(%class.A* nonnull dereferenceable(8) %9, i32* %10)
  %13 = bitcast %class.D* %d to %class.B*
  store %class.B* %13, %class.B** %pb, align 8
  %14 = load %class.B*, %class.B** %pb, align 8
  %15 = load i32*, i32** %ptr_g1, align 8
  %16 = bitcast %class.B* %14 to void (%class.B*, i32*)***
  %vtable4 = load void (%class.B*, i32*)**, void (%class.B*, i32*)*** %16, align 8
  %vfn5 = getelementptr inbounds void (%class.B*, i32*)*, void (%class.B*, i32*)** %vtable4, i64 2
  %17 = load void (%class.B*, i32*)*, void (%class.B*, i32*)** %vfn5, align 8
  call void %17(%class.B* nonnull dereferenceable(8) %14, i32* %15)
  %18 = load %class.B*, %class.B** %pb, align 8
  %19 = load i32*, i32** %ptr_g2, align 8
  %20 = bitcast %class.B* %18 to void (%class.B*, i32*)***
  %vtable6 = load void (%class.B*, i32*)**, void (%class.B*, i32*)*** %20, align 8
  %vfn7 = getelementptr inbounds void (%class.B*, i32*)*, void (%class.B*, i32*)** %vtable6, i64 3
  %21 = load void (%class.B*, i32*)*, void (%class.B*, i32*)** %vfn7, align 8
  call void %21(%class.B* nonnull dereferenceable(8) %18, i32* %19)
  %22 = icmp eq %class.D* %d, null
  br i1 %22, label %cast.end10, label %cast.notnull8

cast.notnull8:                                    ; preds = %cast.end
  %23 = bitcast %class.D* %d to i8*
  %add.ptr9 = getelementptr inbounds i8, i8* %23, i64 8
  %24 = bitcast i8* %add.ptr9 to %class.C*
  br label %cast.end10

cast.end10:                                       ; preds = %cast.notnull8, %cast.end
  %cast.result11 = phi %class.C* [ %24, %cast.notnull8 ], [ null, %cast.end ]
  store %class.C* %cast.result11, %class.C** %pc, align 8
  %25 = load %class.C*, %class.C** %pc, align 8
  %26 = load i32*, i32** %ptr_h1, align 8
  %27 = bitcast %class.C* %25 to void (%class.C*, i32*)***
  %vtable12 = load void (%class.C*, i32*)**, void (%class.C*, i32*)*** %27, align 8
  %vfn13 = getelementptr inbounds void (%class.C*, i32*)*, void (%class.C*, i32*)** %vtable12, i64 2
  %28 = load void (%class.C*, i32*)*, void (%class.C*, i32*)** %vfn13, align 8
  call void %28(%class.C* nonnull dereferenceable(8) %25, i32* %26)
  %29 = load %class.C*, %class.C** %pc, align 8
  %30 = load i32*, i32** %ptr_h2, align 8
  %31 = bitcast %class.C* %29 to void (%class.C*, i32*)***
  %vtable14 = load void (%class.C*, i32*)**, void (%class.C*, i32*)*** %31, align 8
  %vfn15 = getelementptr inbounds void (%class.C*, i32*)*, void (%class.C*, i32*)** %vtable14, i64 3
  %32 = load void (%class.C*, i32*)*, void (%class.C*, i32*)** %vfn15, align 8
  call void %32(%class.C* nonnull dereferenceable(8) %29, i32* %30)
  store %class.D* %d, %class.D** %pd, align 8
  %33 = load %class.D*, %class.D** %pd, align 8
  %34 = load i32*, i32** %ptr_l1, align 8
  %35 = bitcast %class.D* %33 to void (%class.D*, i32*)***
  %vtable16 = load void (%class.D*, i32*)**, void (%class.D*, i32*)*** %35, align 8
  %vfn17 = getelementptr inbounds void (%class.D*, i32*)*, void (%class.D*, i32*)** %vtable16, i64 4
  %36 = load void (%class.D*, i32*)*, void (%class.D*, i32*)** %vfn17, align 8
  call void %36(%class.D* nonnull dereferenceable(16) %33, i32* %34)
  %37 = load %class.D*, %class.D** %pd, align 8
  %38 = load i32*, i32** %ptr_l2, align 8
  %39 = bitcast %class.D* %37 to void (%class.D*, i32*)***
  %vtable18 = load void (%class.D*, i32*)**, void (%class.D*, i32*)*** %39, align 8
  %vfn19 = getelementptr inbounds void (%class.D*, i32*)*, void (%class.D*, i32*)** %vtable18, i64 5
  %40 = load void (%class.D*, i32*)*, void (%class.D*, i32*)** %vfn19, align 8
  call void %40(%class.D* nonnull dereferenceable(16) %37, i32* %38)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN1DC1Ev(%class.D* nonnull dereferenceable(16) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.D*, align 8
  store %class.D* %this, %class.D** %this.addr, align 8
  %this1 = load %class.D*, %class.D** %this.addr, align 8
  %0 = bitcast %class.D* %this1 to %class.A*
  call void @_ZN1AC2Ev(%class.A* nonnull dereferenceable(8) %0) #6
  %1 = bitcast %class.D* %this1 to %class.B*
  call void @_ZN1BC2Ev(%class.B* nonnull dereferenceable(8) %1, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @_ZTT1D, i64 0, i64 1)) #6
  %2 = bitcast %class.D* %this1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to %class.C*
  call void @_ZN1CC2Ev(%class.C* nonnull dereferenceable(8) %4, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @_ZTT1D, i64 0, i64 3)) #6
  %5 = bitcast %class.D* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [9 x i8*] }, { [11 x i8*], [9 x i8*] }* @_ZTV1D, i32 0, inrange i32 0, i32 5) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = bitcast %class.D* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [9 x i8*] }, { [11 x i8*], [9 x i8*] }* @_ZTV1D, i32 0, inrange i32 0, i32 5) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = bitcast %class.D* %this1 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 8
  %8 = bitcast i8* %add.ptr to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [9 x i8*] }, { [11 x i8*], [9 x i8*] }* @_ZTV1D, i32 0, inrange i32 1, i32 5) to i32 (...)**), i32 (...)*** %8, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN1AC2Ev(%class.A* nonnull dereferenceable(8) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.A*, align 8
  store %class.A* %this, %class.A** %this.addr, align 8
  %this1 = load %class.A*, %class.A** %this.addr, align 8
  %0 = bitcast %class.A* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV1A, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN1BC2Ev(%class.B* nonnull dereferenceable(8) %this, i8** %vtt) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.B*, align 8
  %vtt.addr = alloca i8**, align 8
  store %class.B* %this, %class.B** %this.addr, align 8
  store i8** %vtt, i8*** %vtt.addr, align 8
  %this1 = load %class.B*, %class.B** %this.addr, align 8
  %vtt2 = load i8**, i8*** %vtt.addr, align 8
  %0 = load i8*, i8** %vtt2, align 8
  %1 = bitcast %class.B* %this1 to i32 (...)***
  %2 = bitcast i8* %0 to i32 (...)**
  store i32 (...)** %2, i32 (...)*** %1, align 8
  %3 = getelementptr inbounds i8*, i8** %vtt2, i64 1
  %4 = load i8*, i8** %3, align 8
  %5 = bitcast %class.B* %this1 to i8**
  %vtable = load i8*, i8** %5, align 8
  %vbase.offset.ptr = getelementptr i8, i8* %vtable, i64 -40
  %6 = bitcast i8* %vbase.offset.ptr to i64*
  %vbase.offset = load i64, i64* %6, align 8
  %7 = bitcast %class.B* %this1 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %vbase.offset
  %8 = bitcast i8* %add.ptr to i32 (...)***
  %9 = bitcast i8* %4 to i32 (...)**
  store i32 (...)** %9, i32 (...)*** %8, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN1CC2Ev(%class.C* nonnull dereferenceable(8) %this, i8** %vtt) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.C*, align 8
  %vtt.addr = alloca i8**, align 8
  store %class.C* %this, %class.C** %this.addr, align 8
  store i8** %vtt, i8*** %vtt.addr, align 8
  %this1 = load %class.C*, %class.C** %this.addr, align 8
  %vtt2 = load i8**, i8*** %vtt.addr, align 8
  %0 = load i8*, i8** %vtt2, align 8
  %1 = bitcast %class.C* %this1 to i32 (...)***
  %2 = bitcast i8* %0 to i32 (...)**
  store i32 (...)** %2, i32 (...)*** %1, align 8
  %3 = getelementptr inbounds i8*, i8** %vtt2, i64 1
  %4 = load i8*, i8** %3, align 8
  %5 = bitcast %class.C* %this1 to i8**
  %vtable = load i8*, i8** %5, align 8
  %vbase.offset.ptr = getelementptr i8, i8* %vtable, i64 -40
  %6 = bitcast i8* %vbase.offset.ptr to i64*
  %vbase.offset = load i64, i64* %6, align 8
  %7 = bitcast %class.C* %this1 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %vbase.offset
  %8 = bitcast i8* %add.ptr to i32 (...)***
  %9 = bitcast i8* %4 to i32 (...)**
  store i32 (...)** %9, i32 (...)*** %8, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define linkonce_odr dso_local void @_ZN1A2f1EPi(%class.A* nonnull dereferenceable(8) %this, i32* %i) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca %class.A*, align 8
  %i.addr = alloca i32*, align 8
  store %class.A* %this, %class.A** %this.addr, align 8
  store i32* %i, i32** %i.addr, align 8
  %this1 = load %class.A*, %class.A** %this.addr, align 8
  %0 = load i32*, i32** @global_ptr_f1, align 8
  %1 = bitcast i32* %0 to i8*
  %2 = load i32*, i32** %i.addr, align 8
  %3 = bitcast i32* %2 to i8*
  call void @_Z9MUSTALIASPvS_(i8* %1, i8* %3)
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define linkonce_odr dso_local void @_ZN1A2f2EPi(%class.A* nonnull dereferenceable(8) %this, i32* %i) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca %class.A*, align 8
  %i.addr = alloca i32*, align 8
  store %class.A* %this, %class.A** %this.addr, align 8
  store i32* %i, i32** %i.addr, align 8
  %this1 = load %class.A*, %class.A** %this.addr, align 8
  %0 = load i32*, i32** @global_ptr_f2, align 8
  %1 = bitcast i32* %0 to i8*
  %2 = load i32*, i32** %i.addr, align 8
  %3 = bitcast i32* %2 to i8*
  call void @_Z9MUSTALIASPvS_(i8* %1, i8* %3)
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define linkonce_odr dso_local void @_ZN1B2g1EPi(%class.B* nonnull dereferenceable(8) %this, i32* %i) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca %class.B*, align 8
  %i.addr = alloca i32*, align 8
  store %class.B* %this, %class.B** %this.addr, align 8
  store i32* %i, i32** %i.addr, align 8
  %this1 = load %class.B*, %class.B** %this.addr, align 8
  %0 = load i32*, i32** @global_ptr_g1, align 8
  %1 = bitcast i32* %0 to i8*
  %2 = load i32*, i32** %i.addr, align 8
  %3 = bitcast i32* %2 to i8*
  call void @_Z9MUSTALIASPvS_(i8* %1, i8* %3)
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define linkonce_odr dso_local void @_ZN1B2g2EPi(%class.B* nonnull dereferenceable(8) %this, i32* %i) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca %class.B*, align 8
  %i.addr = alloca i32*, align 8
  store %class.B* %this, %class.B** %this.addr, align 8
  store i32* %i, i32** %i.addr, align 8
  %this1 = load %class.B*, %class.B** %this.addr, align 8
  %0 = load i32*, i32** @global_ptr_g2, align 8
  %1 = bitcast i32* %0 to i8*
  %2 = load i32*, i32** %i.addr, align 8
  %3 = bitcast i32* %2 to i8*
  call void @_Z9MUSTALIASPvS_(i8* %1, i8* %3)
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define linkonce_odr dso_local void @_ZN1C2h1EPi(%class.C* nonnull dereferenceable(8) %this, i32* %i) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca %class.C*, align 8
  %i.addr = alloca i32*, align 8
  store %class.C* %this, %class.C** %this.addr, align 8
  store i32* %i, i32** %i.addr, align 8
  %this1 = load %class.C*, %class.C** %this.addr, align 8
  %0 = load i32*, i32** @global_ptr_h1, align 8
  %1 = bitcast i32* %0 to i8*
  %2 = load i32*, i32** %i.addr, align 8
  %3 = bitcast i32* %2 to i8*
  call void @_Z9MUSTALIASPvS_(i8* %1, i8* %3)
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define linkonce_odr dso_local void @_ZN1C2h2EPi(%class.C* nonnull dereferenceable(8) %this, i32* %i) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca %class.C*, align 8
  %i.addr = alloca i32*, align 8
  store %class.C* %this, %class.C** %this.addr, align 8
  store i32* %i, i32** %i.addr, align 8
  %this1 = load %class.C*, %class.C** %this.addr, align 8
  %0 = load i32*, i32** @global_ptr_h2, align 8
  %1 = bitcast i32* %0 to i8*
  %2 = load i32*, i32** %i.addr, align 8
  %3 = bitcast i32* %2 to i8*
  call void @_Z9MUSTALIASPvS_(i8* %1, i8* %3)
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define linkonce_odr dso_local void @_ZN1D2l1EPi(%class.D* nonnull dereferenceable(16) %this, i32* %i) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca %class.D*, align 8
  %i.addr = alloca i32*, align 8
  store %class.D* %this, %class.D** %this.addr, align 8
  store i32* %i, i32** %i.addr, align 8
  %this1 = load %class.D*, %class.D** %this.addr, align 8
  %0 = load i32*, i32** @global_ptr_l1, align 8
  %1 = bitcast i32* %0 to i8*
  %2 = load i32*, i32** %i.addr, align 8
  %3 = bitcast i32* %2 to i8*
  call void @_Z9MUSTALIASPvS_(i8* %1, i8* %3)
  ret void
}

; Function Attrs: noinline optnone uwtable mustprogress
define linkonce_odr dso_local void @_ZN1D2l2EPi(%class.D* nonnull dereferenceable(16) %this, i32* %i) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca %class.D*, align 8
  %i.addr = alloca i32*, align 8
  store %class.D* %this, %class.D** %this.addr, align 8
  store i32* %i, i32** %i.addr, align 8
  %this1 = load %class.D*, %class.D** %this.addr, align 8
  %0 = load i32*, i32** @global_ptr_l2, align 8
  %1 = bitcast i32* %0 to i8*
  %2 = load i32*, i32** %i.addr, align 8
  %3 = bitcast i32* %2 to i8*
  call void @_Z9MUSTALIASPvS_(i8* %1, i8* %3)
  ret void
}

attributes #0 = { noinline optnone uwtable mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline nounwind optnone uwtable mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline norecurse optnone uwtable mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind optnone uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 12.0.0"}
